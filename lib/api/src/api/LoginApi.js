/*
 * Demo API
 * Demo
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Login'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Login'));
  } else {
    // Browser globals (root is window)
    if (!root.DemoApi) {
      root.DemoApi = {};
    }
    root.DemoApi.LoginApi = factory(root.DemoApi.ApiClient, root.DemoApi.Login);
  }
}(this, function(ApiClient, Login) {
  'use strict';

  /**
   * Login service.
   * @module api/LoginApi
   * @version v1
   */

  /**
   * Constructs a new LoginApi. 
   * @alias module:api/LoginApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the loginCreate operation.
     * @callback module:api/LoginApi~loginCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Login} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check the credentials and return the REST Token if the credentials are valid and authenticated. Calls Django Auth login method to register User ID in Django session framework  Accept the following POST parameters: username, password Return the REST Framework Token Object's key.
     * @param {module:model/Login} data 
     * @param {module:api/LoginApi~loginCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Login}
     */
    this.loginCreate = function(data, callback) {
      var postBody = data;

      // verify the required parameter 'data' is set
      if (data === undefined || data === null) {
        throw new Error("Missing the required parameter 'data' when calling loginCreate");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Basic'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Login;

      return this.apiClient.callApi(
        '/login/', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
