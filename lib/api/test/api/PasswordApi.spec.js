/*
 * Demo API
 * Demo
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DemoApi);
  }
}(this, function(expect, DemoApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DemoApi.PasswordApi();
  });

  describe('(package)', function() {
    describe('PasswordApi', function() {
      describe('passwordChangeCreate', function() {
        it('should call passwordChangeCreate successfully', function(done) {
          // TODO: uncomment, update parameter values for passwordChangeCreate call and complete the assertions
          /*
          var data = new DemoApi.PasswordChange();
          data.newPassword1 = "";
          data.newPassword2 = "";

          instance.passwordChangeCreate(data, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DemoApi.PasswordChange);
            expect(data.newPassword1).to.be.a('string');
            expect(data.newPassword1).to.be("");
            expect(data.newPassword2).to.be.a('string');
            expect(data.newPassword2).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('passwordResetConfirmCreate', function() {
        it('should call passwordResetConfirmCreate successfully', function(done) {
          // TODO: uncomment, update parameter values for passwordResetConfirmCreate call and complete the assertions
          /*
          var data = new DemoApi.PasswordResetConfirm();
          data.newPassword1 = "";
          data.newPassword2 = "";
          data.uid = "";
          data.token = "";

          instance.passwordResetConfirmCreate(data, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DemoApi.PasswordResetConfirm);
            expect(data.newPassword1).to.be.a('string');
            expect(data.newPassword1).to.be("");
            expect(data.newPassword2).to.be.a('string');
            expect(data.newPassword2).to.be("");
            expect(data.uid).to.be.a('string');
            expect(data.uid).to.be("");
            expect(data.token).to.be.a('string');
            expect(data.token).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('passwordResetCreate', function() {
        it('should call passwordResetCreate successfully', function(done) {
          // TODO: uncomment, update parameter values for passwordResetCreate call and complete the assertions
          /*
          var data = new DemoApi.PasswordReset();
          data.email = "";

          instance.passwordResetCreate(data, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DemoApi.PasswordReset);
            expect(data.email).to.be.a('string');
            expect(data.email).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
