/*
 * Demo API
 * Demo
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.9
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DemoApi);
  }
}(this, function(expect, DemoApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DemoApi.UserApi();
  });

  describe('(package)', function() {
    describe('UserApi', function() {
      describe('userPartialUpdate', function() {
        it('should call userPartialUpdate successfully', function(done) {
          // TODO: uncomment, update parameter values for userPartialUpdate call and complete the assertions
          /*
          var data = new DemoApi.UserDetails();
          data.firstName = "";
          data.lastName = "";
          data.email = "";
          data.password1 = "";
          data.password2 = "";

          instance.userPartialUpdate(data, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DemoApi.UserDetails);
            expect(data.firstName).to.be.a('string');
            expect(data.firstName).to.be("");
            expect(data.lastName).to.be.a('string');
            expect(data.lastName).to.be("");
            expect(data.email).to.be.a('string');
            expect(data.email).to.be("");
            expect(data.password1).to.be.a('string');
            expect(data.password1).to.be("");
            expect(data.password2).to.be.a('string');
            expect(data.password2).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('userRead', function() {
        it('should call userRead successfully', function(done) {
          // TODO: uncomment userRead call and complete the assertions
          /*

          instance.userRead(function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DemoApi.UserDetails);
            expect(data.firstName).to.be.a('string');
            expect(data.firstName).to.be("");
            expect(data.lastName).to.be.a('string');
            expect(data.lastName).to.be("");
            expect(data.email).to.be.a('string');
            expect(data.email).to.be("");
            expect(data.password1).to.be.a('string');
            expect(data.password1).to.be("");
            expect(data.password2).to.be.a('string');
            expect(data.password2).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('userUpdate', function() {
        it('should call userUpdate successfully', function(done) {
          // TODO: uncomment, update parameter values for userUpdate call and complete the assertions
          /*
          var data = new DemoApi.UserDetails();
          data.firstName = "";
          data.lastName = "";
          data.email = "";
          data.password1 = "";
          data.password2 = "";

          instance.userUpdate(data, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(DemoApi.UserDetails);
            expect(data.firstName).to.be.a('string');
            expect(data.firstName).to.be("");
            expect(data.lastName).to.be.a('string');
            expect(data.lastName).to.be("");
            expect(data.email).to.be.a('string');
            expect(data.email).to.be("");
            expect(data.password1).to.be.a('string');
            expect(data.password1).to.be("");
            expect(data.password2).to.be.a('string');
            expect(data.password2).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
